// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simple.proto

package stream

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Package_FrameType int32

const (
	Package_LeagueMessage   Package_FrameType = 0
	Package_PushMessage     Package_FrameType = 1
	Package_UnionOpsMessage Package_FrameType = 2
	Package_SocialMessage   Package_FrameType = 4
	Package_PointsMessage   Package_FrameType = 8
	Package_MatchVS         Package_FrameType = 16
	Package_Gosnowflake     Package_FrameType = 32
	Package_TimeoutService  Package_FrameType = 64
	Package_RobotService    Package_FrameType = 128
	Package_CpsService      Package_FrameType = 256
	Package_AgentService    Package_FrameType = 512
	Package_FastMessage     Package_FrameType = 1024
	Package_HotelServer     Package_FrameType = 2048
)

var Package_FrameType_name = map[int32]string{
	0:    "LeagueMessage",
	1:    "PushMessage",
	2:    "UnionOpsMessage",
	4:    "SocialMessage",
	8:    "PointsMessage",
	16:   "MatchVS",
	32:   "Gosnowflake",
	64:   "TimeoutService",
	128:  "RobotService",
	256:  "CpsService",
	512:  "AgentService",
	1024: "FastMessage",
	2048: "HotelServer",
}

var Package_FrameType_value = map[string]int32{
	"LeagueMessage":   0,
	"PushMessage":     1,
	"UnionOpsMessage": 2,
	"SocialMessage":   4,
	"PointsMessage":   8,
	"MatchVS":         16,
	"Gosnowflake":     32,
	"TimeoutService":  64,
	"RobotService":    128,
	"CpsService":      256,
	"AgentService":    512,
	"FastMessage":     1024,
	"HotelServer":     2048,
}

func (x Package_FrameType) String() string {
	return proto.EnumName(Package_FrameType_name, int32(x))
}

func (Package_FrameType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5ffd045dd4d042c1, []int{0, 0}
}

type Package struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ffd045dd4d042c1, []int{0}
}

func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (m *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(m, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

type Package_Frame struct {
	Type    Package_FrameType `protobuf:"varint,1,opt,name=Type,proto3,enum=stream.Package_FrameType" json:"Type,omitempty"`
	Version uint32            `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// TODO cmdID
	CmdId uint32 `protobuf:"varint,3,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"`
	// TODO userID
	UserId               uint64   `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Reserved             uint32   `protobuf:"varint,5,opt,name=reserved,proto3" json:"reserved,omitempty"`
	Message              []byte   `protobuf:"bytes,6,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Package_Frame) Reset()         { *m = Package_Frame{} }
func (m *Package_Frame) String() string { return proto.CompactTextString(m) }
func (*Package_Frame) ProtoMessage()    {}
func (*Package_Frame) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ffd045dd4d042c1, []int{0, 0}
}

func (m *Package_Frame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package_Frame.Unmarshal(m, b)
}
func (m *Package_Frame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package_Frame.Marshal(b, m, deterministic)
}
func (m *Package_Frame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package_Frame.Merge(m, src)
}
func (m *Package_Frame) XXX_Size() int {
	return xxx_messageInfo_Package_Frame.Size(m)
}
func (m *Package_Frame) XXX_DiscardUnknown() {
	xxx_messageInfo_Package_Frame.DiscardUnknown(m)
}

var xxx_messageInfo_Package_Frame proto.InternalMessageInfo

func (m *Package_Frame) GetType() Package_FrameType {
	if m != nil {
		return m.Type
	}
	return Package_LeagueMessage
}

func (m *Package_Frame) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Package_Frame) GetCmdId() uint32 {
	if m != nil {
		return m.CmdId
	}
	return 0
}

func (m *Package_Frame) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Package_Frame) GetReserved() uint32 {
	if m != nil {
		return m.Reserved
	}
	return 0
}

func (m *Package_Frame) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterEnum("stream.Package_FrameType", Package_FrameType_name, Package_FrameType_value)
	proto.RegisterType((*Package)(nil), "stream.Package")
	proto.RegisterType((*Package_Frame)(nil), "stream.Package.Frame")
}

func init() { proto.RegisterFile("simple.proto", fileDescriptor_5ffd045dd4d042c1) }

var fileDescriptor_5ffd045dd4d042c1 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0xc1, 0x6e, 0xda, 0x40,
	0x10, 0x86, 0xbb, 0x60, 0x6c, 0x3a, 0x18, 0x58, 0xb6, 0xaa, 0xea, 0x72, 0xb2, 0x38, 0xf9, 0x52,
	0x1f, 0xda, 0x17, 0x68, 0x55, 0x89, 0x04, 0x29, 0x28, 0xc8, 0x90, 0x5c, 0xa3, 0xc5, 0x9e, 0x98,
	0x15, 0xb6, 0xd7, 0xda, 0xb5, 0x89, 0x72, 0xe3, 0xa9, 0x72, 0xca, 0x7b, 0xe5, 0x1a, 0xad, 0x83,
	0x9d, 0xe3, 0xff, 0xcd, 0x37, 0xfb, 0xaf, 0x34, 0xe0, 0x6a, 0x91, 0x97, 0x19, 0x86, 0xa5, 0x92,
	0x95, 0x64, 0xb6, 0xae, 0x14, 0xf2, 0x7c, 0xf1, 0xda, 0x07, 0x67, 0xc3, 0xe3, 0x23, 0x4f, 0x71,
	0xfe, 0x42, 0x60, 0xb0, 0x54, 0x3c, 0x47, 0xf6, 0x0b, 0xac, 0xdd, 0x73, 0x89, 0x1e, 0xf1, 0x49,
	0x30, 0xf9, 0xfd, 0x33, 0xfc, 0x90, 0xc3, 0x8b, 0x18, 0x36, 0x92, 0x11, 0xa2, 0x46, 0x63, 0x1e,
	0x38, 0x27, 0x54, 0x5a, 0xc8, 0xc2, 0xeb, 0xf9, 0x24, 0x18, 0x47, 0x6d, 0x64, 0xdf, 0xc1, 0x8e,
	0xf3, 0xe4, 0x41, 0x24, 0x5e, 0xbf, 0x19, 0x0c, 0xe2, 0x3c, 0x59, 0x25, 0xec, 0x07, 0x38, 0xb5,
	0x46, 0x65, 0xb8, 0xe5, 0x93, 0xc0, 0x8a, 0x6c, 0x13, 0x57, 0x09, 0x9b, 0xc3, 0x50, 0xa1, 0x46,
	0x75, 0xc2, 0xc4, 0x1b, 0x34, 0x1b, 0x5d, 0x36, 0x2d, 0x6b, 0xd4, 0x9a, 0xa7, 0xe8, 0xd9, 0x3e,
	0x09, 0xdc, 0xa8, 0x8d, 0x8b, 0x37, 0x02, 0x5f, 0xbb, 0x3f, 0xb1, 0x19, 0x8c, 0x6f, 0x90, 0xa7,
	0x35, 0x5e, 0xc6, 0xf4, 0x0b, 0x9b, 0xc2, 0x68, 0x53, 0xeb, 0x43, 0x0b, 0x08, 0xfb, 0x06, 0xd3,
	0xbb, 0x42, 0xc8, 0xe2, 0xb6, 0xd4, 0x2d, 0xec, 0x99, 0xc5, 0xad, 0x8c, 0x05, 0xcf, 0x5a, 0x64,
	0x19, 0xb4, 0x91, 0xa2, 0xa8, 0x3a, 0x6b, 0xc8, 0x46, 0xe0, 0xac, 0x79, 0x15, 0x1f, 0xee, 0xb7,
	0x94, 0x9a, 0x87, 0xaf, 0xa4, 0x2e, 0xe4, 0xd3, 0x63, 0xc6, 0x8f, 0x48, 0x7d, 0xc6, 0x60, 0xb2,
	0x13, 0x39, 0xca, 0xba, 0xda, 0xa2, 0x3a, 0x89, 0x18, 0xe9, 0x5f, 0x36, 0x03, 0x37, 0x92, 0x7b,
	0xd9, 0x91, 0x33, 0x61, 0x53, 0x80, 0xff, 0xa5, 0xee, 0x80, 0xe9, 0x76, 0xff, 0xa5, 0x58, 0x7c,
	0x3a, 0x16, 0xa3, 0x30, 0x5a, 0x72, 0x5d, 0xb5, 0xcd, 0xe7, 0xa1, 0x21, 0xd7, 0xb2, 0xc2, 0xcc,
	0x48, 0xa8, 0xe8, 0x99, 0xee, 0xed, 0xe6, 0x9a, 0x7f, 0xde, 0x03, 0x00, 0x00, 0xff, 0xff, 0x7b,
	0x9f, 0x09, 0x68, 0xdd, 0x01, 0x00, 0x00,
}
